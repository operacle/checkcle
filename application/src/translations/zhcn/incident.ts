
import { IncidentTranslations } from '../types/incident';

export const incidentTranslations: IncidentTranslations = {
  incidentManagement: 'Incident Management',
  incidentsManagementDesc: 'Track and manage service incidents and their resolutions',
  unresolvedIncidents: 'Unresolved',
  resolvedIncidents: 'Resolved',
  activeIncidents: 'Active Incidents',
  criticalIssues: 'Critical Issues',
  avgResolutionTime: 'Avg. Resolution Time',
  noIncidents: 'No Active Incidents',
  createIncident: 'Create Incident',
  investigating: 'Investigating',
  identified: 'Identified',
  monitoring: 'Monitoring',
  resolved: 'Resolved',
  scheduleIncidentManagement: 'Schedule & Incident Management',
  incidentName: 'Incident Name',
  incidentStatus: 'Incident Status',
  highPriority: 'High Priority',
  configurationSettings: 'Configuration Settings',
  incidentCreatedSuccess: 'Incident created successfully',
  basicInfo: 'Basic Information',
  serviceId: 'Service ID',
  assignedTo: 'Assigned To',
  unassigned: 'Unassigned',
  timeline: 'Timeline',
  incidentTime: 'Incident Time',
  resolutionTime: 'Resolution Time',
  systems: 'Systems',
  noSystems: 'No systems affected',
  impactAnalysis: 'Impact Analysis',
  rootCause: 'Root Cause',
  resolutionSteps: 'Resolution Steps',
  lessonsLearned: 'Lessons Learned',
  resolutionDetails: 'Resolution Details',
  assignment: 'Assignment',
  download: 'Download',
  downloadPdf: 'Download PDF',
  print: 'Print',
  confidentialNote: 'This document is confidential and intended for internal use only.',
  generatedOn: 'Generated on',
  enterResolutionSteps: 'Enter steps taken to resolve the incident',
  enterLessonsLearned: 'Enter lessons learned from this incident',
  editIncident: 'Edit Incident',
  editIncidentDesc: 'Update details for this incident',
  updating: 'Updating...',
  update: 'Update',
  create: 'Create',
  creating: 'Creating...',
  configuration: 'Configuration',
  failedToUpdateStatus: 'Failed to update status',
  inProgress: 'In Progress',
};
